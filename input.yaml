# Code generated by Redoc. DO NOT EDIT.

openapi: 3.0.3
info:
  title: Checkout Service API
  version: "2023-07-26"
  contact:
    name: Checkout Engineers
    email: checkout-engineers@banked.com
  description: |-
    # Introduction

    The Checkout API is a JSON RESTful API that allows you to create and manage
    checkout sessions. A checkout session is how an end-user can complete a payment.

    In order to interact with this API, you will first need to have a payment
    Session ID and a client API key.

    See [the documentation for creating a payment session](https://developer.banked.com/api-reference/payments-api/payments#create-a-payment-session)
    for more information.

    ## Authentication

    You can authenticate with this API by including your client API key as a query parameter to
    any request. ie: `https://api.banked.com/checkout/v3/sessions?api_key=YOUR_API_KEY`

    See the [documentation section](https://developer.banked.com/api-reference/payments-api/client-keys#create-client-key)
    to learn how to create an API key.

    ## Flows and Regions

    Depending on what region you are operating in and other factors such as currency,
    the checkout flow will be different. The flow is dynamic, and can change at any time.

    The flow is determined by the `stage` attribute on the checkout session.

    See the [Stage documentation](schemas/CheckoutStage) for more information about the individual stages.

    ## Flow Overview

    > These are subject to change, but are a good guide for what to expect in each region.

    ### US

    1. provider_selection_v1
    2. consent_capture_v1
    3. provider_authorise_v1
    4. callback_processing_v1 *
    5. OR
       - callback_failed_v1
       - provider_account_selection
    6. completed_v1

    ### UK

    1. provider_selection_v1
    2. consent_capture_v1
    3. provider_authorise_v1
    4. payment_processing_v1 *
    5. OR
       - payment_failed_v1
       - completed_v1

    ### AU

    1. provider_selection_v1
    2. additional_details_capture_v1
    3. provider_required_payer_action_v1
    4. payment_processing_v1 *
    5. OR
       - payment_failed_v1
       - completed_v1

    ### EU

    1. provider_selection_v1
    2. OR depending on the provider
       - consent_capture_v1
       - additional_details_capture_v1
    3. provider_authorise_v1
    4. payment_processing_v1 *
    5. OR
       - payment_failed_v1
       - completed_v1

    > \*
    > The processing stages exist to allow for the payer to complete an action
    > with a third party. Normally, when the user returns to the checkout, there is
    > a waiting period while the third party and Banked communicate. This waiting
    > period normally last long enough for this stage to appear.
    >
    > However, in some cases, when the server communication is very fast, or if the user
    > takes a while to return to checkout, the stage may not appear. In these cases, it will
    > move directly to the following stage.
    >
    > This is not an error, and should be properly handled by your application.

    ## Actions and Instructions

    The checkout flow is driven by a series of actions.

    Each action has a set of instructions that you must follow in order to complete the action.

    For example, the `provider_selection_v1` stage has an action called `select_provider`.

    To move to the "next stage", you must call the `select_provider` action with the
    `provider_id` of the provider you wish to use.

    For more information about instructions, see the [Instruction documentation](schemas/ActionInstruction).

    For more information about the actions you take, see the PATCH operations in the `checkout-session` tag.

    ### Normal Cases

    For most instructions, the actions will follow a very natural flow.

    For example, the `select_provider` instruction and action are very tightly linked
    and take you to the next stage.

    If you got this response:

    ```json 3
    {
      "id": "3acb6eba-3229-43d4-b969-7eb559a48147",
      "stage": {
        "identifier": "provider_selection_v1"
      },
      "actions": [
          {
              "action": "select_provider",
              "data": {
                  "provider_brands": [
                      {
                          "id": "fe8c2be9-3f06-4712-9cef-63ce1fcf76f4",
                          "logo_url": "https://images.dev.banked.com/v1/read/c2799892-543e-4fb7-8883-6a6fa147d942/40/40",
                          "name": "Mock Bank",
                          "popularity": 0
                      }
                  ],
                  "providers": [
                      {
                          "alternative_names": [],
                          "brand_id": "a4d1956d-11bc-4a97-a0d7-e925bce100e3",
                          "id": "ea291566-989e-468e-bcb3-e83c51acb980",
                          "name": "Mock Bank AU",
                          "short_name": null,
                          "status": "OPERATIONAL"
                      }
                  ]
              },
              "href": "https://api.dev.banked.com/checkout/v3/sessions/3acb6eba-3229-43d4-b969-7eb559a48147/select_provider",
              "is_final": false,
              "method": "PATCH"
          }
      ]
      //... omitted for brevity
    }
    ```

    Then when the user has selected a provider, you would call the `select_provider` endpoint.

    ### Special Cases

    Some of the actions are special and behave slightly differently.

    Some instructions don't map directly to a similarly named action. Instead, they instruct the client what
    to do, but they don't expect the client to call an endpoint, or the endpoint they expect to be called is
    not named exactly the same as the instruction.

    This is intentional, but we get that it is slightly confusing.

    The weird cases are documented below.

    1. `redirect_to_provider`:<br />
       This action does not have an associated server action that you must take.
       This is because the state will progress behind the scenes when the user completes the action in their banking app/website.
       <br />
       What you should do is redirect the user to the `href` that is returned in the action, and then poll the checkout session to see if the stage has changed.
       <br />
    2. `process_mx_callback`:<br/>
       This action requires the user to complete some action with MX before continuing. This action entails what is expected **after** the user has finished the action with MX.
       What is expected is that you create the MX widget using the passed in URL and fully complete that step. When it is completed, then you take the action of `process_mx_callback`.
       <br />
    3. `payer_action_with_provider_required`:<br />
       This action is similar to the `redirect_to_provider` use case, but you do not need to redirect the payer to any URL. The payer will receive an
       out of band notification (SMS or Push) from their bank. They will then complete the action in their banking app/website. Once they have completed the action,
       they will be instructed to return to the checkout.
       <br />
       You may either poll as soon as you receive this action, or poll as soon as the user refocuses on checkout to see what the next action will be.

    ## Errors

    The Checkout API uses conventional HTTP response codes to indicate the success or failure of an API request.

    In general, codes in the 2xx range indicate success, codes in the 4xx range indicate
    an error that failed given the information provided (e.g., a required parameter was omitted, a charge failed, etc.),
    and codes in the 5xx range indicate an error with Checkout's servers (these are rare).

    If an error occurs in the 4xx or 5xx range, the checkout will not progress to the next stage.

    ### External Actors

    In some of the flows, a third party is involved in the checkout process.
    In these cases, the user will be directed to a third party website to complete
    some step. This will result in an external actor that will take an action.

    In these cases, if an error occurs with the external actor, since you were not the
    caller of the action, we cannot return an HTTP 4xx or 5xx error code to indicate
    the error.

    As such, we will return an HTTP 200 response code, and the `stage` will be set to
    one of the failure stages.

    The two failure stages are `callback_failed_v1` and `payment_failed_v1`.

    In the US region, the `callback_failed_v1` stage will be used if the payer
    cancels the payment on the third party website or if there is some issue connecting
    during this stage.

    In all other regions, the payment will attempt to complete directly after the
    external action occurs. If the payment fails, the `payment_failed_v1` stage will
    be used.
servers:
  - url: https://api.banked.com
    description: The production base path for banked APIs
  - url: https://api.b.banked.com
    description: The Bank of America (BofA) base path for banked APIs
  - url: https://api.staging.banked.com
    description: The staging base path for banked APIs
  - url: https://api.dev.banked.com
    description: The development base path for banked APIs
  - url: http://localhost:4010
    description: "Mock: Boot `pnpx @stoplight/prism-cli mock ./openapi.yaml`"
  - url: http://localhost:3000
    description: Local Development
tags:
  - name: v3
    description: New next action based checkout API
  - name: validations
    description: Stateless validation helpers for checkout attributes
security:
  - ApiKeyAuth: []
paths:
  /checkout/v3/sessions/openapi:
    get:
      operationId: Get-OpenAPI-Spec
      summary: Get OpenAPI Spec
      description: |-
        Fetch the OpenAPI Specification

        Use the Banked-Checkout-Api-Version header to specify the version of the
        OpenAPI Document to download
      tags:
        - openapi
      parameters:
        - $ref: "#/components/parameters/BankedCheckoutAPIVersionParameter"
      responses:
        "200":
          $ref: "#/components/responses/OpenAPISpecResponse"
  /checkout/v3/sessions:
    description: Create Checkout
    post:
      operationId: Create-Checkout
      summary: Create a new checkout session
      description: |-
        Create a new checkout session to progress through the actions of
        creating a checkout.

        ### Usage

        - You should use this to create a checkout session at the start of checkout

        - You may use this to restart the checkout session if it is attached to
          a payment session that is already completed.

        - A continue URL may be provided to redirect the user to after the checkout
          session has been completed. This is useful if you want to redirect the
          user to a page that is specific to the payment session that was created.
      tags:
        - checkout-session
      parameters:
        - $ref: "#/components/parameters/IdempotencyKeyParameter"
        - $ref: "#/components/parameters/BankedCheckoutAPIVersionParameter"
        - $ref: "#/components/parameters/HeaderBankedSDKType"
        - $ref: "#/components/parameters/HeaderBankedSDKVersion"
        - $ref: "#/components/parameters/HeaderBankedSDKHost"
        - $ref: "#/components/parameters/HeaderBankedSDKHostVersion"
      requestBody:
        $ref: "#/components/requestBodies/CreateCheckoutSession"
      responses:
        "201":
          $ref: "#/components/responses/CreateSessionResponse"
        "400":
          $ref: "#/components/responses/CreateCheckoutBadRequest"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "404":
          $ref: "#/components/responses/PaymentNotFoundResponse"
        "410":
          $ref: "#/components/responses/APIVersionNoLongerSupported"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /checkout/v3/sessions/{id}:
    description: Get existing checkout session by ID
    parameters:
      - $ref: "#/components/parameters/CheckoutIDParameter"
    get:
      operationId: Fetch-Checkout-Session-By-ID
      summary: Get the current checkout session
      description: |-
        Get the current checkout session and available next actions.

        ### Usage

        - You should use this to get the current checkout session and resources
      parameters:
        - $ref: "#/components/parameters/BankedCheckoutAPIVersionParameter"
        - $ref: "#/components/parameters/HeaderBankedSDKType"
        - $ref: "#/components/parameters/HeaderBankedSDKVersion"
        - $ref: "#/components/parameters/HeaderBankedSDKHost"
        - $ref: "#/components/parameters/HeaderBankedSDKHostVersion"
      tags:
        - checkout-session
      responses:
        "200":
          $ref: "#/components/responses/FetchSessionResponse"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "404":
          $ref: "#/components/responses/FetchSessionNotFoundResponse"
        "410":
          $ref: "#/components/responses/APIVersionNoLongerSupported"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /checkout/v3/sessions/{id}/select_provider:
    description: |-
      Selecting a Provider is the process of assigning a Financial Institution
      which will be sending the money from the Consumer(payer) to the
      Merchant(payee).

      The available providers that can participate in the flow of funds will be
      dictated by the payment intent that is being processed.
    parameters:
      - $ref: "#/components/parameters/CheckoutIDParameter"
    patch:
      operationId: Select-Provider
      summary: Set the provider on the checkout session
      description: |-
        ### Usage

        - You should use this to provide a UUID that is associated to one of
          banked's available providers
      parameters:
        - $ref: "#/components/parameters/IdempotencyKeyParameter"
        - $ref: "#/components/parameters/BankedCheckoutAPIVersionParameter"
        - $ref: "#/components/parameters/HeaderBankedSDKType"
        - $ref: "#/components/parameters/HeaderBankedSDKVersion"
        - $ref: "#/components/parameters/HeaderBankedSDKHost"
        - $ref: "#/components/parameters/HeaderBankedSDKHostVersion"
      tags:
        - checkout-session
      requestBody:
        $ref: "#/components/requestBodies/PatchSelectProvider"
      responses:
        "200":
          $ref: "#/components/responses/ProviderSelectedResponse"
        "400":
          $ref: "#/components/responses/SelectProviderBadRequest"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "404":
          $ref: "#/components/responses/FetchSessionNotFoundResponse"
        "410":
          $ref: "#/components/responses/APIVersionNoLongerSupported"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /checkout/v3/sessions/{id}/initiate_authorisation:
    parameters:
      - $ref: "#/components/parameters/CheckoutIDParameter"
    patch:
      operationId: InitiateAuthorisation
      summary: Initiate the Authorisation with the selected provider
      description: |-
        Consenting is the process of informing the checkout backend that the payer
        agrees to the terms and conditions of paying by bank.

        Initiate Authorisation starts the authorisation flow.
        Taking this action signals that consent is given for Banked
        to begin the authorisation flow with the selected provider.

        This action is also where the user provides extra details
        that are required to start the authorisation flow.
      parameters:
        - $ref: "#/components/parameters/IdempotencyKeyParameter"
        - $ref: "#/components/parameters/BankedCheckoutAPIVersionParameter"
        - $ref: "#/components/parameters/HeaderBankedSDKType"
        - $ref: "#/components/parameters/HeaderBankedSDKVersion"
        - $ref: "#/components/parameters/HeaderBankedSDKHost"
        - $ref: "#/components/parameters/HeaderBankedSDKHostVersion"
      tags:
        - checkout-session
      requestBody:
        $ref: "#/components/requestBodies/PatchInitiateAuthorisation"
      responses:
        "200":
          $ref: "#/components/responses/ConsentReceivedResponse"
        "400":
          $ref: "#/components/responses/ConsentBadRequest"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "404":
          $ref: "#/components/responses/FetchSessionNotFoundResponse"
        "410":
          $ref: "#/components/responses/APIVersionNoLongerSupported"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /checkout/v3/sessions/{id}/process_mx_callback:
    parameters:
      - $ref: "#/components/parameters/CheckoutIDParameter"
    patch:
      operationId: ProcessMXCallback
      summary: Process MX Callback
      description: Process the MX Callback
      parameters:
        - $ref: "#/components/parameters/IdempotencyKeyParameter"
        - $ref: "#/components/parameters/BankedCheckoutAPIVersionParameter"
        - $ref: "#/components/parameters/HeaderBankedSDKType"
        - $ref: "#/components/parameters/HeaderBankedSDKVersion"
        - $ref: "#/components/parameters/HeaderBankedSDKHost"
        - $ref: "#/components/parameters/HeaderBankedSDKHostVersion"
      tags:
        - checkout-session
      responses:
        "200":
          $ref: "#/components/responses/MXCallbackProcessedResponse"
        "400":
          $ref: "#/components/responses/MXCallbackBadRequest"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "404":
          $ref: "#/components/responses/FetchSessionNotFoundResponse"
        "410":
          $ref: "#/components/responses/APIVersionNoLongerSupported"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /checkout/v3/sessions/{id}/change_provider:
    description: |-
      Changing a Provider is the process of changing the Financial Institution
      which will be sending the money from the Consumer(payer) to the
      Merchant(payee).


      The available providers that can participate in the flow of funds will be
      dictated by the payment intent that is being processed.
    parameters:
      - $ref: "#/components/parameters/CheckoutIDParameter"
    patch:
      operationId: Change-Provider
      summary: Change the provider on the checkout session
      description: |-
        ### Usage

        - You should use this to provide a UUID that is associated to one of
          banked's available providers
      parameters:
        - $ref: "#/components/parameters/IdempotencyKeyParameter"
        - $ref: "#/components/parameters/BankedCheckoutAPIVersionParameter"
        - $ref: "#/components/parameters/HeaderBankedSDKType"
        - $ref: "#/components/parameters/HeaderBankedSDKVersion"
        - $ref: "#/components/parameters/HeaderBankedSDKHost"
        - $ref: "#/components/parameters/HeaderBankedSDKHostVersion"
      tags:
        - checkout-session
      requestBody:
        $ref: "#/components/requestBodies/PatchSelectProvider"
      responses:
        "200":
          $ref: "#/components/responses/ProviderSelectedResponse"
        "400":
          $ref: "#/components/responses/SelectProviderBadRequest"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "404":
          $ref: "#/components/responses/FetchSessionNotFoundResponse"
        "410":
          $ref: "#/components/responses/APIVersionNoLongerSupported"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /checkout/v3/sessions/{id}/select_provider_account:
    description: You need to select an account which will be used to complete the checkout.
    parameters:
      - $ref: "#/components/parameters/CheckoutIDParameter"
    patch:
      operationId: Select-Provider-Account
      summary: Set the bank account on the checkout session.
      description: |-
        Once you have created a checkout session and a provider was chosen, then
        you can select account for the checkout session.
      parameters:
        - $ref: "#/components/parameters/IdempotencyKeyParameter"
        - $ref: "#/components/parameters/BankedCheckoutAPIVersionParameter"
        - $ref: "#/components/parameters/HeaderBankedSDKType"
        - $ref: "#/components/parameters/HeaderBankedSDKVersion"
        - $ref: "#/components/parameters/HeaderBankedSDKHost"
        - $ref: "#/components/parameters/HeaderBankedSDKHostVersion"
      tags:
        - checkout-session
      requestBody:
        $ref: "#/components/requestBodies/PatchSelectProviderAccount"
      responses:
        "200":
          $ref: "#/components/responses/ProviderAccountSelectedResponse"
        "400":
          $ref: "#/components/responses/SelectProviderAccountBadRequest"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "404":
          $ref: "#/components/responses/FetchSessionNotFoundResponse"
        "410":
          $ref: "#/components/responses/APIVersionNoLongerSupported"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /checkout/v3/sessions/{id}/deselect_provider:
    description: Use this action to deselect the previously selected provider.
    parameters:
      - $ref: "#/components/parameters/CheckoutIDParameter"
    patch:
      operationId: Deselect-Provider
      summary: Deselect the bank chosen to handle this checkout
      description: |-
        Once you have created a checkout session and a provider was chosen, if
        you would like to use a different provider, use this action to deselect the
        previously selected provider.
      parameters:
        - $ref: "#/components/parameters/IdempotencyKeyParameter"
        - $ref: "#/components/parameters/BankedCheckoutAPIVersionParameter"
        - $ref: "#/components/parameters/HeaderBankedSDKType"
        - $ref: "#/components/parameters/HeaderBankedSDKVersion"
        - $ref: "#/components/parameters/HeaderBankedSDKHost"
        - $ref: "#/components/parameters/HeaderBankedSDKHostVersion"
      tags:
        - checkout-session
      responses:
        "200":
          $ref: "#/components/responses/ProviderDeselectedResponse"
        "400":
          $ref: "#/components/responses/ProviderDeselectedBadRequest"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "404":
          $ref: "#/components/responses/FetchSessionNotFoundResponse"
        "410":
          $ref: "#/components/responses/APIVersionNoLongerSupported"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /checkout/v3/sessions/{id}/retry_payment:
    parameters:
      - $ref: "#/components/parameters/CheckoutIDParameter"
    patch:
      operationId: RetryPayment
      summary: Retry a failed Payment
      description: |-
        There are certain cases where if a payment failed, it can be immediately retried.
        This endpoint allows you to retry a failed payment.
      parameters:
        - $ref: "#/components/parameters/IdempotencyKeyParameter"
        - $ref: "#/components/parameters/BankedCheckoutAPIVersionParameter"
        - $ref: "#/components/parameters/HeaderBankedSDKType"
        - $ref: "#/components/parameters/HeaderBankedSDKVersion"
        - $ref: "#/components/parameters/HeaderBankedSDKHost"
        - $ref: "#/components/parameters/HeaderBankedSDKHostVersion"
      tags:
        - checkout-session
      responses:
        "200":
          $ref: "#/components/responses/PaymentRetriedResponse"
        "400":
          $ref: "#/components/responses/RetryPaymentBadRequest"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "404":
          $ref: "#/components/responses/FetchSessionNotFoundResponse"
        "410":
          $ref: "#/components/responses/APIVersionNoLongerSupported"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /checkout/v3/validations/bsb:
    description: |-
      Validate the BSB Number provided. This is a 6 digit number that identifies the
      bank and branch of an account in the AUstralian Market. If the number if valid
      then a Provider ID will be included as part of the match.
    put:
      operationId: Validation-BSB-Number
      summary: Validate BSB Number
      description: |-
        Validate a BSB Number for an AU provider.

        If the BSB matches the provider then the provider ID will be returned. If
        there is no match, you will receive valid false, and a null provider ID.

        ### Usage

        - You should use this to confirm a BSB Number provided by a consumer is valid
        - You could use this to switch provider when a provider ID returned is
          different to the one you have locally.
      parameters:
        - $ref: "#/components/parameters/BankedCheckoutAPIVersionParameter"
        - $ref: "#/components/parameters/HeaderBankedSDKType"
        - $ref: "#/components/parameters/HeaderBankedSDKVersion"
        - $ref: "#/components/parameters/HeaderBankedSDKHost"
        - $ref: "#/components/parameters/HeaderBankedSDKHostVersion"
      security: []
      tags:
        - validations
      requestBody:
        $ref: "#/components/requestBodies/PutValidateBSBNumber"
      responses:
        "200":
          $ref: "#/components/responses/ValidateBSBNumberResponse"
        "400":
          $ref: "#/components/responses/ValidationBadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "500":
          $ref: "#/components/responses/InternalServerError"
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: query
      name: api_key
      description: |-
        API key authentication is required to use the Checkout API. You can
        obtain an API key by contacting **[Banked](https://banked.com/contact)**.
  parameters:
    BankedCheckoutAPIVersionParameter:
      name: Banked-Checkout-Api-Version
      in: header
      required: false
      description: |-
        The API Version of the request. Should match RFC-3338.

        Will default to latest version if not specified.
      schema:
        type: string
        minLength: 10
        maxLength: 10
        format: date
        example: "2023-06-15"
    IdempotencyKeyParameter:
      name: Banked-Idempotency-Key
      in: header
      required: true
      description: The Idempotency Key of the Request
      schema:
        $ref: "#/components/schemas/IdempotencyKey"
    HeaderBankedSDKType:
      name: Banked-SDK-Type
      in: header
      required: false
      description: Name of sdk type used.
      schema:
        $ref: "#/components/schemas/BankedSDKType"
    HeaderBankedSDKVersion:
      name: Banked-SDK-Version
      in: header
      required: false
      description: Name of sdk type used.
      schema:
        $ref: "#/components/schemas/BankedSDKVersion"
    HeaderBankedSDKHost:
      name: Banked-SDK-Host
      in: header
      required: false
      description: The host application of the SDK.
      schema:
        $ref: "#/components/schemas/BankedSDKHost"
    HeaderBankedSDKHostVersion:
      name: Banked-SDK-Host-Version
      in: header
      required: false
      description: The header key for the SDK host version
      schema:
        $ref: "#/components/schemas/BankedSDKHostVersion"
    CheckoutIDParameter:
      name: id
      in: path
      required: true
      description: The id of the checkout session
      schema:
        $ref: "#/components/schemas/CheckoutSessionIDType"
  responses:
    OpenAPISpecResponse:
      description: The OpenAPI Spec
      content:
        application/json:
          schema: {}
    CreateSessionResponse:
      description: The checkout session was created
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Checkout"
          examples:
            Successful-WithIncentive:
              description: |-
                We have created a checkout session for you and you can now
                proceed by using the actions array to find what to do next.
              value:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                stage:
                  identifier: provider_selection_v1
                actions:
                  - action: select_provider
                    href: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04/select_provider
                    method: PATCH
                    is_final: false
                    data:
                      providers:
                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          brand_id: 1bb61461-e5e3-4ebb-8cc6-5b0c37f1b7da
                          name: Barclays
                          short_name: business
                          alternative_names:
                            - bofa
                          status: OPERATIONAL
                      provider_brands:
                        - id: 1bb61461-e5e3-4ebb-8cc6-5b0c37f1b7da
                          name: Barclays Parent Brand
                          popularity: 0
                          logo_url: https://images.dev.banked.com/v1/read/bc35e489-66ba-4290-a5d1-60f5952026b7/40/40
                alternate_actions: []
                payment:
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  state: awaiting_authorisation
                  amount: 1000
                  currency: GBP
                  merchant: Nike
                  line_items:
                    - name: shoe
                      description: Air force 1
                      amount: 1000
                      quantity: 1
                content:
                  terms_and_conditions_url: https://www.paybybank.com/terms-de
                  privacy_policy_url: https://www.paybybank.com/privacy-de
                  legal_entity_name: Pay by B UAB
                locale: en
                incentive:
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  name: Plant a tree
                  headline: Plant a tree!
                  subline: When you checkout, make a difference, and plant a tree.
                  image_url: https://images.dev.banked.com/v1/read/bc35e489-66ba-4290-a5d1-60f5952026b7/40/40
                redirects:
                  continue_url: null
                  success_url: merchant.com/success
                  error_url: merchant.com/fail
            Successful-WithoutIncentive:
              description: |-
                We have created a checkout session for you and you can now
                proceed by using the actions array to find what to do next.
              value:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                stage:
                  identifier: provider_selection_v1
                actions:
                  - action: select_provider
                    href: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04/select_provider
                    method: PATCH
                    is_final: false
                    data:
                      providers:
                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          brand_id: 1bb61461-e5e3-4ebb-8cc6-5b0c37f1b7da
                          name: Barclays
                          short_name: business
                          alternative_names:
                            - bofa
                          status: OPERATIONAL
                      provider_brands:
                        - id: 1bb61461-e5e3-4ebb-8cc6-5b0c37f1b7da
                          name: Barclays Parent Brand
                          popularity: 0
                          logo_url: https://images.dev.banked.com/v1/read/bc35e489-66ba-4290-a5d1-60f5952026b7/40/40
                alternate_actions: []
                payment:
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                  state: awaiting_authorisation
                  amount: 1000
                  currency: GBP
                  merchant: Nike
                  line_items:
                    - name: shoe
                      description: Air force 1
                      amount: 1000
                      quantity: 1
                content:
                  terms_and_conditions_url: https://www.paybybank.com/terms-de
                  privacy_policy_url: https://www.paybybank.com/privacy-de
                  legal_entity_name: Pay by B UAB
                locale: en
                incentive: null
                redirects:
                  continue_url: null
                  success_url: merchant.com/success
                  error_url: merchant.com/fail
    CreateCheckoutBadRequest:
      description: The server is unable to create the checkout session due to invalid data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            paymentAlreadyComplete:
              summary: Payment already complete
              value:
                message: |-
                  Payment with id ec5b380a-7d77-4d31-970d-3c22f672c86a has already
                  been completed.
                code: payment_complete
                errors: []
                extra_info:
                  merchant_name: Nike
            validationError:
              summary: Validation error
              description: You've passed in some incorrect data.
              value:
                message: Validation failed
                code: validation_failed
                errors:
                  - title: Invalid field payment_ID
                    code: invalid
                    source: "#/payment_id"
                  - title: Missing field locale
                    code: missing
                    source: "#/locale"
                extra_info: null
    UnauthorisedError:
      description: API key is missing or invalid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            NotAuthorised:
              value:
                message: Not Authorised
                code: not_authorised
                errors: []
                extra_info: null
    PaymentNotFoundResponse:
      description: |
        A required resource for creating the checkout session was not found.

        See the errors array for more details.

        Most likely, this means that the
        payment intent that you are attempting to create a checkout session for
        does not exist or could not be found. Please ensure your payment_id is correct.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            PaymentNotFound:
              value:
                message: Resource not found
                code: not_found
                errors:
                  - code: not_found
                    source: "#/payment_id"
                    title: Payment not found
                extra_info: null
    APIVersionNoLongerSupported:
      description: |-
        The API Version you are trying to use is no longer supported.

        You should upgrade to the latest version of the API.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    InternalServerError:
      description: |-
        Internal Server Errors result from issues with the Banked servers.

        It should not be due to something you have done.

        Check banked's status page.
        If the error does not resolve itself in a normal time, please email the
        reporting email listed in `info`.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            UnexpectedError:
              value:
                message: An unexpected error has occurred.
                code: unexpected_error
                errors: []
                extra_info: null
    FetchSessionResponse:
      description: The checkout session exists and returns all sub resources by default.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Checkout"
    FetchSessionNotFoundResponse:
      description: |-
        The checkout session you are searching for was not found.
        Either it has expired, was never created, or the ID is incorrect.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            NotFound:
              value:
                code: not_found
                message: Resource not found
                errors: []
                extra_info: null
    ProviderSelectedResponse:
      description: The Provider was selected
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Checkout"
    SelectProviderBadRequest:
      description: The server is unable to set the provider on the checkout session
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            paymentAlreadyComplete:
              summary: Payment already complete
              value:
                message: |-
                  Checkout session with id ec5b380a-7d77-4d31-970d-3c22f672c86a is in
                  state pending and the provider may not be changed.
                code: validation_failed
                errors: []
                extra_info: null
            validationError:
              summary: Validation error
              description: You've passed in some incorrect data.
              value:
                message: Validation failed
                code: validation_failed
                errors:
                  - title: Invalid field provider_id
                    code: invalid
                    source: "#/provider_id"
                  - title: Missing required field payer_attributes.iban
                    code: missing
                    source: "#/payer_attributes.iban"
                extra_info: null
    ConsentReceivedResponse:
      description: The server acknowledges that the payer has consented to pay by bank
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Checkout"
    ConsentBadRequest:
      description: |-
        The server is unable to continue because the request did not contain valid
        data.

        Either the payer has not consented to pay by bank or the required supplemental
        attributes were not included in the body.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    MXCallbackProcessedResponse:
      description: The Callback was processed successfully.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Checkout"
    MXCallbackBadRequest:
      description: |-
        The server returned 400 Bad Request because the data you sent was invalid or
        checkout session is in an invalid state.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    ProviderAccountSelectedResponse:
      description: The account was selected.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Checkout"
    SelectProviderAccountBadRequest:
      description: The server is unable to set the account on the checkout session
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            paymentAlreadyComplete:
              summary: Payment already complete
              value:
                message: |-
                  Checkout session with id ec5b380a-7d77-4d31-970d-3c22f672c86a is in
                  state pending and the account may not be changed.
                code: validation_failed
                errors: []
                extra_info: null
            validationError:
              summary: Validation error
              description: You've passed in some incorrect data.
              value:
                message: Validation failed
                code: validation_failed
                errors:
                  - title: Invalid field provider_id
                    code: invalid
                    source: "#/account_id"
                extra_info: null
    ProviderDeselectedResponse:
      description: The provider was deselected
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Checkout"
    ProviderDeselectedBadRequest:
      description: The server is unable to deselect the provider on the checkout session
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    PaymentRetriedResponse:
      description: The Payment was retried
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Checkout"
    RetryPaymentBadRequest:
      description: |-
        The server is unable to continue because the request did not contain valid
        data.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    ValidateBSBNumberResponse:
      description: The BSB Number was validated. Inspect body for validation result.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BSBNumberValidationResponse"
    ValidationBadRequestError:
      description: |-
        The server is unable to parse the request that you've made to validate a field.


        This doesn't mean that the object that you are trying to validate is invalid,
        but rather that the request that you've made to validate it is invalid.

        We will always return a 200 response code if the request is valid,
        even if the object that you are trying to validate is invalid.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    IdempotencyKey:
      type: string
    BankedSDKType:
      title: SDK type
      type: string
      description: SDK type
      enum:
        - SDK_TYPE_WEB
        - SDK_TYPE_ANDROID
        - SDK_TYPE_IOS
    BankedSDKVersion:
      title: SDK version
      type: string
      description: SDK Version used by client
    BankedSDKHost:
      title: SDK host
      type: string
      description: SDK Host key
    BankedSDKHostVersion:
      title: SDK host version
      type: string
      description: The header key for the SDK host version
    LocaleType:
      title: Locale
      type: string
      description: |-
        Supported  **language code** for creating checkout sessions as defined
        by **[BCP 47](https://datatracker.ietf.org/doc/html/rfc5646)**
        specification.

        This is case sensitive.
      minLength: 1
      format: BCP-47
      nullable: true
    PaymentIntentIDType:
      title: Payment Intent ID
      description: A unique identifier of payment.
      type: string
    URLType:
      title: URL
      type: string
      description: A valid URL as defined by the **[RFC 3986](https://www.rfc-editor.org/rfc/rfc3986)** specification.
      format: uri
    CreateCheckout:
      title: Create Checkout Body
      type: object
      description: |-
        Use this request to create a new checkout session.
        The properties continue_url and locale are both optional.

        ## Locale

        Use locale to specify which language you would like the checkout to render in.

        If not supplied, we will fall back to the platform standard of using the
        `Accept-Language` header.

        Banked will make a best effort attempt to match the language supplied to the list of supported
        languages, it is not guaranteed to match exactly.

        For example, Banked's client libraries support rendering in German (de). If you pass in
        Swiss German (gsw), we will use the platform standard of matching the requested language
        to the best supported language.

        In this case, we will set `gsw` as the locale and pass it to our clients, which will attempt
        to localise checkout. The client will use both `gsw` and using the user-supplied Accept-Language
        header to match the language to the best match - in this case German (`de`).

        As a developer, you should allow the merchant to specify their desired language, which you should set here.
        Then when rendering the localised content, use both the checkout's locale as well as their device preferences
        to find the best matched translation.

        ## Continue URL

        You should use Continue URL if you are an app developer and the user needs to return to an app deep link
        to continue the checkout flow.
      properties:
        locale:
          $ref: "#/components/schemas/LocaleType"
        payment_id:
          $ref: "#/components/schemas/PaymentIntentIDType"
        continue_url:
          $ref: "#/components/schemas/URLType"
      required:
        - payment_id
      additionalProperties: false
      example:
        locale: en
        payment_id: 4c37f125-3a76-43c5-85af-9905fe9bb6dd
        continue_url: https://example.com/continue
    CheckoutSessionIDType:
      title: Checkout session ID
      description: A unique identifier for a checkout session.
      type: string
    provider_selection_v1:
      type: object
      title: provider_selection_v1
      properties:
        identifier:
          type: string
          enum:
            - provider_selection_v1
          example: provider_selection_v1
          default: provider_selection_v1
      required:
        - identifier
      additionalProperties: false
    ProviderStatus:
      type: string
      description: |-

        - OPERATIONAL - The provider can process funds
        - DEGRADED - The provider is processing funds for some payments, but their may
           be intermittent failures
        - UNAVAILABLE - The provider is not able to process any payments at this time
      enum:
        - OPERATIONAL
        - DEGRADED
        - UNAVAILABLE
    SelectedProviderInfo:
      type: object
      description: |-
        This is a flattened provider object that holds all the data for when you've
        selected a provider.

        It holds the same data as the Provider and Brand schemas do, but it is
        flattened and does not contain the popularity field.
      properties:
        id:
          type: string
        name:
          type: string
          description: Human readable name for provider
          example: Barclays
        short_name:
          description: A alias for the provider that is optional
          type: string
          example: business
          nullable: true
        alternative_names:
          type: array
          description: Misspellings or alternative names for search completion
          items:
            type: string
            example: bofa
        status:
          $ref: "#/components/schemas/ProviderStatus"
        brand_id:
          type: string
        brand_name:
          type: string
          example: Bank of Scotland
        brand_logo:
          type: string
          format: uri
          description: |-
            The URL of the logo that a browser can download. Can be used as an
            image src property.
          example: https://images.banked.com/2cef60cec6e6ec87e78c6ef76ce7cefe796ce7fc6ececf7.png
      required:
        - id
        - name
        - short_name
        - alternative_names
        - status
        - brand_id
        - brand_name
        - brand_logo
      additionalProperties: false
    consent_capture_v1:
      type: object
      title: consent_capture_v1
      properties:
        identifier:
          type: string
          enum:
            - consent_capture_v1
          example: consent_capture_v1
          default: consent_capture_v1
        selected_provider_info:
          $ref: "#/components/schemas/SelectedProviderInfo"
      required:
        - identifier
        - selected_provider_info
      additionalProperties: false
    initialise_mx_v1:
      type: object
      title: initialise_mx_v1
      properties:
        identifier:
          type: string
          enum:
            - initialise_mx_v1
          example: initialise_mx_v1
          default: initialise_mx_v1
        selected_provider_info:
          $ref: "#/components/schemas/SelectedProviderInfo"
      required:
        - identifier
        - selected_provider_info
      additionalProperties: false
    additional_details_capture_v1:
      type: object
      title: additional_details_capture_v1
      properties:
        identifier:
          type: string
          enum:
            - additional_details_capture_v1
          example: additional_details_capture_v1
          default: additional_details_capture_v1
        selected_provider_info:
          $ref: "#/components/schemas/SelectedProviderInfo"
      required:
        - identifier
        - selected_provider_info
      additionalProperties: false
    provider_authorise_v1:
      type: object
      title: provider_authorise_v1
      properties:
        identifier:
          type: string
          enum:
            - provider_authorise_v1
          example: provider_authorise_v1
          default: provider_authorise_v1
        selected_provider_info:
          $ref: "#/components/schemas/SelectedProviderInfo"
      required:
        - identifier
        - selected_provider_info
      additionalProperties: false
    callback_processing_v1:
      type: object
      title: callback_processing_v1
      properties:
        identifier:
          type: string
          enum:
            - callback_processing_v1
          example: callback_processing_v1
          default: callback_processing_v1
        selected_provider_info:
          $ref: "#/components/schemas/SelectedProviderInfo"
      required:
        - identifier
        - selected_provider_info
      additionalProperties: false
    CallbackError:
      type: string
      description: |-
        Tells you why the callback failed. This will be one of the
        following values:

          - consent_failed: The user failed to provide consent.
          - consent_expired: The user took too long to provide consent.
          - connection_failed: Another error occurred that made our system unable to connect to the provider.
      enum:
        - consent_failed
        - consent_expired
        - connection_failed
    callback_failed_v1:
      type: object
      title: callback_failed_v1
      description: |-
        This is the U.S. specific failure stage that may occur as a result of
        an external action.
      properties:
        identifier:
          type: string
          enum:
            - callback_failed_v1
          example: callback_failed_v1
          default: callback_failed_v1
        selected_provider_info:
          $ref: "#/components/schemas/SelectedProviderInfo"
        error:
          $ref: "#/components/schemas/CallbackError"
      required:
        - identifier
        - selected_provider_info
        - error
      additionalProperties: false
    payment_processing_v1:
      type: object
      title: payment_processing_v1
      properties:
        identifier:
          type: string
          enum:
            - payment_processing_v1
          example: payment_processing_v1
          default: payment_processing_v1
        selected_provider_info:
          $ref: "#/components/schemas/SelectedProviderInfo"
      required:
        - identifier
        - selected_provider_info
      additionalProperties: false
    ProviderAccountDisplayNullable:
      type: object
      nullable: true
      additionalProperties: false
      properties:
        name:
          type: string
          description: The payer's account name
        account_number:
          type: string
          description: The account number. This number will be obfuscated by the API
      required:
        - name
        - account_number
    PaymentFailureReason:
      type: string
      description: |-
        Tells you why the payment failed. This will be one of the
        following values:
          - generic_failure: The payment failed for an unknown reason.
          - generic_failure_try_again: The payment failed for an unknown reason, but the payer should try again.
          - insufficient_funds: The payer does not have enough funds to make the payment.
          - daily_banking_limit_reached: The payer has reached their daily banking limit.
          - agreement_cancelled: The payer cancelled the agreement.
          - payment_expired: The payment did not complete in time and it expired.
      enum:
        - generic_failure
        - generic_failure_try_again
        - insufficient_funds
        - daily_banking_limit_reached
        - agreement_cancelled
        - payment_expired
    payment_failed_v1:
      type: object
      title: payment_failed_v1
      description: |-
        This is the EU/GB/AU specific failure stage that may occur as a result of
        an external action.

        At this stage, we **may** have a selected account, however,
        depending on the nature of the failure, we may not have a selected account.
      properties:
        identifier:
          type: string
          enum:
            - payment_failed_v1
          example: payment_failed_v1
          default: payment_failed_v1
        selected_provider_info:
          $ref: "#/components/schemas/SelectedProviderInfo"
        selected_account_info:
          $ref: "#/components/schemas/ProviderAccountDisplayNullable"
        failure_reason:
          $ref: "#/components/schemas/PaymentFailureReason"
      required:
        - identifier
        - selected_provider_info
        - failure_reason
        - selected_account_info
      additionalProperties: false
    provider_account_selection_v1:
      type: object
      title: provider_account_selection_v1
      properties:
        identifier:
          type: string
          enum:
            - provider_account_selection_v1
          example: provider_account_selection_v1
          default: provider_account_selection_v1
        selected_provider_info:
          $ref: "#/components/schemas/SelectedProviderInfo"
      required:
        - identifier
        - selected_provider_info
      additionalProperties: false
    ProviderAccountDisplay:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          description: The payer's account name
        account_number:
          type: string
          description: The account number. This number will be obfuscated by the API
      required:
        - name
        - account_number
    completed_v1:
      type: object
      title: completed_v1
      properties:
        identifier:
          type: string
          enum:
            - completed_v1
          example: completed_v1
          default: completed_v1
        selected_provider_info:
          $ref: "#/components/schemas/SelectedProviderInfo"
        selected_account_info:
          $ref: "#/components/schemas/ProviderAccountDisplay"
      required:
        - identifier
        - selected_provider_info
        - selected_account_info
      additionalProperties: false
    provider_required_payer_action_v1:
      type: object
      title: provider_required_payer_action_v1
      properties:
        identifier:
          type: string
          enum:
            - provider_required_payer_action_v1
          example: provider_required_payer_action_v1
          default: provider_required_payer_action_v1
        selected_provider_info:
          $ref: "#/components/schemas/SelectedProviderInfo"
      required:
        - identifier
        - selected_provider_info
      additionalProperties: false
    CheckoutStage:
      title: CheckoutStage
      description: |-
        The stage represents the where we are in the current checkout flow.

        The stage is roughly related to the current screen you should show to the
        payer.

        Stages are the primary mechanism for determining if your SDK supports the checkout flow.

        For example, if you are using SDK version 3.0.0 and it doesn't support
        a certain stage that will be required for you to complete checkout,
        then we will return a 400 because you cannot proceed.
      oneOf:
        - $ref: "#/components/schemas/provider_selection_v1"
        - $ref: "#/components/schemas/consent_capture_v1"
        - $ref: "#/components/schemas/initialise_mx_v1"
        - $ref: "#/components/schemas/additional_details_capture_v1"
        - $ref: "#/components/schemas/provider_authorise_v1"
        - $ref: "#/components/schemas/callback_processing_v1"
        - $ref: "#/components/schemas/callback_failed_v1"
        - $ref: "#/components/schemas/payment_processing_v1"
        - $ref: "#/components/schemas/payment_failed_v1"
        - $ref: "#/components/schemas/provider_account_selection_v1"
        - $ref: "#/components/schemas/completed_v1"
        - $ref: "#/components/schemas/provider_required_payer_action_v1"
      discriminator:
        propertyName: identifier
        mapping:
          provider_selection_v1: "#/components/schemas/provider_selection_v1"
          consent_capture_v1: "#/components/schemas/consent_capture_v1"
          initialise_mx_v1: "#/components/schemas/initialise_mx_v1"
          additional_details_capture_v1: "#/components/schemas/additional_details_capture_v1"
          provider_authorise_v1: "#/components/schemas/provider_authorise_v1"
          callback_processing_v1: "#/components/schemas/callback_processing_v1"
          callback_failed_v1: "#/components/schemas/callback_failed_v1"
          payment_processing_v1: "#/components/schemas/payment_processing_v1"
          payment_failed_v1: "#/components/schemas/payment_failed_v1"
          provider_account_selection_v1: "#/components/schemas/provider_account_selection_v1"
          completed_v1: "#/components/schemas/completed_v1"
          provider_required_payer_action_v1: "#/components/schemas/provider_required_payer_action_v1"
    ActionDiscriminator:
      type: string
      enum:
        - select_provider
        - change_provider
        - initiate_authorisation
        - select_provider_account
        - redirect_to_provider
        - deselect_provider
        - await
        - payer_action_with_provider_required
        - retry_payment
        - process_mx_callback
    ActionMethod:
      type: string
      description: |-
        The Action Method describes how a client should handle the action.

        For `GET` and `PATCH` actions, the client should make an HTTP request with the specified URL.

        > On web, this might look like calling `fetch(href, { method: method })`
        >
        > On iOS, this might look like calling `URLSession.shared.dataTask(with: href, method: method)`
        >
        > On Android, this might look like calling `HttpURLConnection(href).apply { requestMethod = method }`

        For `BROWSER_GET` actions, the client should open the specified URL in the user's browser.

        > On web, this might look like calling `window.open(href)` with the URL provided in the `href` field.
        >
        > On iOS, this might look like calling `UIApplication.shared.open(href)`
        >
        > On Android, this might look like calling `startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(href)))`
      enum:
        - GET
        - PATCH
        - BROWSER_GET
    BrandReference:
      type: string
      description: |-
        The reference to the brand that operates this provider.

        Some instances of provider will be branches of a brand, while
        others may be operating entities, such as businesses.
    Provider:
      type: object
      properties:
        id:
          type: string
        brand_id:
          $ref: "#/components/schemas/BrandReference"
        name:
          type: string
          description: Human readable name for provider
          example: Barclays
        short_name:
          description: A alias for the provider that is optional
          type: string
          example: business
          nullable: true
        alternative_names:
          type: array
          description: Misspellings or alternative names for search completion
          items:
            type: string
            example: bofa
        status:
          $ref: "#/components/schemas/ProviderStatus"
      required:
        - id
        - brand_id
        - name
        - short_name
        - alternative_names
        - status
      additionalProperties: false
    ProviderBrand:
      description: |-
        The Provider Brand is a presentational container for multiple providers.

        A provider can move funds from payer(consumer) to payee(merchant). The
        brand should be used to allow the payer to identify their bank.
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          example: Bank of Scotland
        popularity:
          description: |-
            A sparse index for sort order that can be used to prioritise providers.

            It is advised that you show provider brands in order of popularity.
          type: integer
          minimum: 0
        logo_url:
          type: string
          format: uri
          description: |-
            The URL of the logo that a browser can download. Can be used as an
            image src property.
          example: https://images.dev.banked.com/v1/read/bc35e489-66ba-4290-a5d1-60f5952026b7/40/40
      required:
        - id
        - name
        - popularity
        - logo_url
      additionalProperties: false
    IsFinal:
      type: boolean
      description: |-
        The is_final property lets you know that this action is the final action to take in the flow.

        This normally means that you can show a **pay now** button instead of the normal button name.

        For example, if the action is "select_provider_account", you might normally show a **confirm account** button,
        but if the `is_final` property is true, you might change the button text to be **pay now** or **confirm payment**.

        > Important note:
        >
        > This is not a substitute for checking the response. This should **not** be used for logic that decides what
        > comes next in the checkout flow. This is a **hint** that helps you give users a better experience.
        >
        > If we return a next action after you take this action, you should still take that action to progress the flow.
        >
        > Always **use the payment state to determine whether or not the flow of funds has started**.
    SelectProviderInstruction:
      title: Instruction - select_provider
      description: |-
        Action: `select_provider`
        Method: `PATCH`

        Selecting a provider is a valid action on a checkout session which
        exists and has not initiated the flow of funds between accounts.

        The action follows Hypermedia as the Engine of Application State.

        Actions require HTTP requests in order to be fulfilled. In this instance
        the available data to complete the action is a set of Providers which
        will allow the Consumer(payer) to request funds are credited to the
        Merchant(payee) from that provider.
      type: object
      properties:
        action:
          $ref: "#/components/schemas/ActionDiscriminator"
        href:
          type: string
          format: uri
          example: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04/select_provider
        method:
          $ref: "#/components/schemas/ActionMethod"
        data:
          description: |-
            Data attempts to provide the needed information for the associated
            actions.

            In this instance there will be a list of providers that can
            participate in the flow of funds, and one id from the list must be
            provided in the action PATCH request.
          type: object
          properties:
            providers:
              type: array
              title: Providers List
              description: The list of available providers. Intentionally not completed.
              items:
                $ref: "#/components/schemas/Provider"
            provider_brands:
              type: array
              items:
                $ref: "#/components/schemas/ProviderBrand"
          required:
            - providers
            - provider_brands
          additionalProperties: false
        is_final:
          $ref: "#/components/schemas/IsFinal"
      required:
        - action
        - href
        - method
        - data
        - is_final
      additionalProperties: false
      example:
        action: select_provider
        href: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04/select_provider
        method: PATCH
        is_final: false
        data:
          providers: []
          provider_brands: []
    SupplementalAttribute:
      type: object
      description: Supplemental Attribute determines which action you are taking and also the identifier for the instruction.
      properties:
        field_key:
          type: string
          description: |-
            The key for this attribute. This is used to identify the attribute when providing the value.

            > Note that for BSB_NUMBER you will need to trim the extra "-" in the value provided.
          enum:
            - IBAN
            - USERNAME
            - CORPORATE_USERNAME
            - ACCOUNT_NAME
            - BSB_NUMBER
            - ACCOUNT_NUMBER
        type:
          type: string
          enum:
            - string
            - boolean
            - integer
            - number
        min_length:
          type: integer
          minimum: 0
          format: uint
        max_length:
          type: integer
          minimum: 0
          format: uint
        pattern:
          type: string
          description: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#pattern
        autocomplete:
          type: string
          description: https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete
      required:
        - field_key
        - type
      additionalProperties: false
    SupplementalAttributeList:
      description: |-
        Additional Consumer identifiers required by the provider.

        If this array includes any of the below string values you
        must prompt the payer to provide this information.

        These attributes must then be provided on the select-provider
        PATCH request.
      type: array
      items:
        $ref: "#/components/schemas/SupplementalAttribute"
      example:
        - field_key: BSB_NUMBER
          max_length: 6
          min_length: 6
          type: string
    InitiateAuthorisationInstruction:
      title: Instruction - initiate_authorisation
      description: |-
        Initiate Authorisation

        Action: `initiate_authorisation`

        Method: `PATCH`

        Initiate Authorisation starts the authorisation flow.
        Taking this action signals that consent is given for Banked
        to begin the authorisation flow with the selected provider.

        This action is also where the user provides extra details
        that are required to start the authorisation flow.
      type: object
      properties:
        action:
          $ref: "#/components/schemas/ActionDiscriminator"
        href:
          type: string
          format: uri
          example: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04/initiate_authorisation
        method:
          $ref: "#/components/schemas/ActionMethod"
        data:
          title: InitiateAuthorisationActionData
          type: object
          required:
            - supplemental_checkout_attributes
          properties:
            supplemental_checkout_attributes:
              $ref: "#/components/schemas/SupplementalAttributeList"
          additionalProperties: false
        is_final:
          $ref: "#/components/schemas/IsFinal"
      required:
        - action
        - href
        - method
        - data
        - is_final
      additionalProperties: false
      example:
        action: initiate_authorisation
        href: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04/initiate_authorisation
        method: PATCH
        is_final: false
        data:
          supplemental_checkout_attributes:
            - field_key: IBAN
              type: string
            - field_key: USERNAME
              type: string
            - field_key: CORPORATE_USERNAME
              type: string
            - field_key: ACCOUNT_NAME
              autocomplete: name
              type: string
              min_length: 1
            - field_key: ACCOUNT_NUMBER
              type: string
    MXWidgetURL:
      type: string
      format: uri
      description: The URL to provide to MX to start the payment auth process. Use this to initialise the MX widget.
      minLength: 1
      example: https://int-widgets.moneydesktop.com/md/connect/085d7218rdvyrclmr8cqkszvv3Z4j98g05ndspxvljfbjllph207861xxvtshgdr5mv7cvtk76t0c0rmg5wlhpg2rnsjdvr7r2wb2pAh0dvgr1yj3vqmn9qzzxxcsb0s94rhvA5Ax6csq6xcxhtrdydq56bwtqn11rA84mm2v6w4bAf30vfy459zxjl257254y2n82cjq8n0pz9w9v8zgjy7qvA1bq13wndkm13pllc78rt8t6bm8kwgr00k3p0dg9Anlqbzqc89568lyh4x2j0jn256vvtsn3bd38dk1187d7xnlf9rgmtp9nhgdyxqhybkgs4yj0A2cp44yxyrl4l4cxnr3dmd70dtmxvg/eyJ1aV9tZXNzYWdlX3ZlcnNpb24iOiI0IiwidWlfbWVzc2FnZV93ZWJ2aWV3X3VybF9zY2hlbWUiOiJteCIsImNsaWVudF9yZWRpcmVjdF91cmwiOiJodHRwczovL2V4YW1wbGUuY29tP3N0YXRlPW15c3RhdGUiLCJjdXJyZW50X2luc3RpdHV0aW9uX2d1aWQiOiJJTlMtMTU3MmEwNGMtOTEyYi01OWJmLTU4NDEtMzMyYzdkZmFmYWVmIiwiZGlzYWJsZV9pbnN0aXR1dGlvbl9zZWFyY2giOnRydWUsImxvY2FsZSI6Ilx1MDAzY3N0cmluZ1x1MDAzZSJ9
    ProcessMXCallbackInstruction:
      title: Instruction - process_mx_callback
      description: |-
        Initialise MX

        Action: `process_mx_callback`

        Method: `PATCH`
      type: object
      properties:
        action:
          $ref: "#/components/schemas/ActionDiscriminator"
        href:
          type: string
          format: uri
          example: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04/process_mx_callback
        method:
          $ref: "#/components/schemas/ActionMethod"
        data:
          title: ProcessMXCallbackData
          type: object
          required:
            - widget_url
          properties:
            widget_url:
              $ref: "#/components/schemas/MXWidgetURL"
          additionalProperties: false
        is_final:
          $ref: "#/components/schemas/IsFinal"
      required:
        - action
        - href
        - method
        - data
        - is_final
      additionalProperties: false
      example:
        action: process_mx_callback
        href: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04/process_mx_callback
        method: PATCH
        is_final: false
        data:
          widget_url: https://int-widgets.moneydesktop.com/md/connect/085d7218rdvyrclmr8cqkszvv3Z4j98g05ndspxvljfbjllph207861xxvtshgdr5mv7cvtk76t0c0rmg5wlhpg2rnsjdvr7r2wb2pAh0dvgr1yj3vqmn9qzzxxcsb0s94rhvA5Ax6csq6xcxhtrdydq56bwtqn11rA84mm2v6w4bAf30vfy459zxjl257254y2n82cjq8n0pz9w9v8zgjy7qvA1bq13wndkm13pllc78rt8t6bm8kwgr00k3p0dg9Anlqbzqc89568lyh4x2j0jn256vvtsn3bd38dk1187d7xnlf9rgmtp9nhgdyxqhybkgs4yj0A2cp44yxyrl4l4cxnr3dmd70dtmxvg/eyJ1aV9tZXNzYWdlX3ZlcnNpb24iOiI0IiwidWlfbWVzc2FnZV93ZWJ2aWV3X3VybF9zY2hlbWUiOiJteCIsImNsaWVudF9yZWRpcmVjdF91cmwiOiJodHRwczovL2V4YW1wbGUuY29tP3N0YXRlPW15c3RhdGUiLCJjdXJyZW50X2luc3RpdHV0aW9uX2d1aWQiOiJJTlMtMTU3MmEwNGMtOTEyYi01OWJmLTU4NDEtMzMyYzdkZmFmYWVmIiwiZGlzYWJsZV9pbnN0aXR1dGlvbl9zZWFyY2giOnRydWUsImxvY2FsZSI6Ilx1MDAzY3N0cmluZ1x1MDAzZSJ9
    ChangeProviderInstruction:
      title: Instruction - change_provider
      description: |-
        Action: `change_provider`
        Method: `PATCH`

        Changing a provider will work in a similar way to selecting a provider,
        however, for this action, the list of providers will not be included in the data.

        Changing a provider is used whenever an async validation informs the payer
        that the info they provided does not match the provider they selected but it
        does match a different provider. In those cases, the validation endpoint
        will provide the matching provider ID.
      type: object
      properties:
        action:
          $ref: "#/components/schemas/ActionDiscriminator"
        href:
          type: string
          format: uri
          example: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04/change_provider
        method:
          $ref: "#/components/schemas/ActionMethod"
        is_final:
          $ref: "#/components/schemas/IsFinal"
      required:
        - action
        - href
        - method
        - is_final
      additionalProperties: false
      example:
        action: change_provider
        href: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04/change_provider
        method: PATCH
        is_final: false
    RedirectToProviderInstruction:
      title: Instruction - redirect_to_provider
      description: |-
        Action: `redirect_to_provider`

        Method: `GET`

        Redirect the payer to their provider application (bank app, generally) to
        continue the flow. The HREF will contain the location of where to redirect.
      type: object
      properties:
        action:
          $ref: "#/components/schemas/ActionDiscriminator"
        href:
          type: string
          format: uri
          example: https://some-bank-maybe-mock.banking&redirect_url=example.org/success_url
        method:
          $ref: "#/components/schemas/ActionMethod"
        data:
          title: RedirectToProviderActionData
          type: object
          properties:
            payer_accessed_link_ids:
              type: array
              uniqueItems: true
              items:
                type: string
              description: |-
                This is a list of all the links that the payer has accessed.

                This is an optional feature and does not have to be used. However, it could be useful to know
                when the payer has accessed a link.

                For example, if you would like the UI to transition when the user uses
                a link, but the link was shown as a QR code, or something without an event handler.
                This feature could allow you to know that a link was accessed.

                To use this feature, append a query parameter of `link_id` to the link provided in this instruction
                and we will ensure the link_id shows up in this list when it is accessed. (ie: https://checkout.banked.com/r/1234-1234-123-12345?link_id=abcde)

                Thus, if the Link ID you have sent is then included in the array, you can safely move your UI on to the "Follow the instructions in your bank" screen,
                even though the user didn't click any buttons. This would signify that the URL was still accessed, just through the QR code.
              example:
                - abcd
                - random-qr-key
          required:
            - payer_accessed_link_ids
          additionalProperties: false
        is_final:
          $ref: "#/components/schemas/IsFinal"
      required:
        - action
        - href
        - method
        - data
        - is_final
      additionalProperties: false
      example:
        action: redirect_to_provider
        href: https://some-bank-maybe-mock.banking&redirect_url=example.org/success_url
        method: GET
        is_final: false
        data:
          payer_accessed_link_ids:
            - abcd
            - random-qr-key
    ProviderAccount:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
          description: The payer's account name
        account_number:
          type: string
          description: The account number. This number will be obfuscated by the API
      required:
        - id
        - name
        - account_number
    SelectProviderAccountInstruction:
      title: Instruction - select_provider_account
      description: |-
        Action: `select_provider_account`

        Method: `PATCH`

        Ask the consumer(payer) which account they would like to proceed with. Then
        make the select_provider_account request.
      type: object
      properties:
        action:
          $ref: "#/components/schemas/ActionDiscriminator"
        href:
          type: string
          format: uri
          example: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04/select_provider_account
        method:
          $ref: "#/components/schemas/ActionMethod"
        data:
          type: object
          required:
            - available_accounts
          properties:
            available_accounts:
              type: array
              items:
                $ref: "#/components/schemas/ProviderAccount"
          additionalProperties: false
        is_final:
          $ref: "#/components/schemas/IsFinal"
      required:
        - action
        - href
        - method
        - data
        - is_final
      additionalProperties: false
      example:
        action: select_provider_account
        href: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04/select_provider_account
        method: PATCH
        is_final: false
        data:
          available_accounts:
            - id: 979F91BD-F852-4494-BE06-E752AC13BAB9
              name: Account One Premium
              account_number: "********2367"
            - id: FB1251AD-ED47-4F57-841F-4846741433CE
              name: Account Two Basic
              account_number: "********9583"
    DeselectProviderInstruction:
      title: Instruction - deselect_provider
      description: |-
        Action: `deselect_provider`

        Method: `PATCH`

        Deselecting a provider is a valid action on a checkout session which

        exists, has an existing provider selected, and has not initiated the flow of
        funds between accounts.
      type: object
      properties:
        action:
          $ref: "#/components/schemas/ActionDiscriminator"
        href:
          type: string
          format: uri
          example: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04/deselect_provider
        method:
          $ref: "#/components/schemas/ActionMethod"
        is_final:
          $ref: "#/components/schemas/IsFinal"
      required:
        - action
        - href
        - method
        - is_final
      additionalProperties: false
      example:
        action: deselect_provider
        href: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04/deselect_provider
        method: PATCH
        is_final: false
    AwaitInstruction:
      title: Instruction - await
      description: |-
        Await while the payment system processes an external action.

        Action: `await`

        Method: `GET`

        You will get this instruction when the payment system is processing an external action
        and there is not yet something for you to do.

        This will occur when the payer finishes the callback flow through their bank.
      type: object
      properties:
        action:
          $ref: "#/components/schemas/ActionDiscriminator"
        href:
          type: string
          format: uri
          example: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04
        method:
          $ref: "#/components/schemas/ActionMethod"
        is_final:
          $ref: "#/components/schemas/IsFinal"
      required:
        - action
        - href
        - method
        - is_final
      additionalProperties: false
      example:
        action: await
        href: https://api.banked.com/checkout/v3/sessions/0a389cda-cecb-4411-90a4-e4fc30d9cc04
        method: GET
        is_final: false
    PayerActionWithProviderRequiredInstruction:
      title: Payer Action with Provider Required instruction
      description: |-
        Action: `payer_action_with_provider_required`

        The Payer must take an action with their provider.

        This action is out of the context of this API flow and can be thought of
        as an external, async action.

        There is nothing for you to do as an API Developer except to inform the user
        that an action is required in their provider app.

        In most cases, the provider will send the payer a message informing them of
        this action. This may be a push notification, or an SMS message.
      type: object
      properties:
        action:
          $ref: "#/components/schemas/ActionDiscriminator"
        is_final:
          $ref: "#/components/schemas/IsFinal"
      required:
        - action
        - is_final
      additionalProperties: false
      example:
        action: payer_action_with_provider_required
        is_final: false
    RetryPaymentInstruction:
      title: Instruction - retry_payment
      description: |-
        Action: `retry_payment`

        Method: `PATCH`

        Try the payment transaction again.
      type: object
      properties:
        action:
          $ref: "#/components/schemas/ActionDiscriminator"
        href:
          type: string
          format: uri
          example: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04/retry_payment
        method:
          $ref: "#/components/schemas/ActionMethod"
        is_final:
          $ref: "#/components/schemas/IsFinal"
      required:
        - action
        - href
        - method
        - is_final
      additionalProperties: false
      example:
        action: retry_payment
        href: https://api.banked.com/checkout/v3/0a389cda-cecb-4411-90a4-e4fc30d9cc04/retry_payment
        method: PATCH
        is_final: true
    ActionInstruction:
      oneOf:
        - $ref: "#/components/schemas/SelectProviderInstruction"
        - $ref: "#/components/schemas/InitiateAuthorisationInstruction"
        - $ref: "#/components/schemas/ProcessMXCallbackInstruction"
        - $ref: "#/components/schemas/ChangeProviderInstruction"
        - $ref: "#/components/schemas/RedirectToProviderInstruction"
        - $ref: "#/components/schemas/SelectProviderAccountInstruction"
        - $ref: "#/components/schemas/DeselectProviderInstruction"
        - $ref: "#/components/schemas/AwaitInstruction"
        - $ref: "#/components/schemas/PayerActionWithProviderRequiredInstruction"
        - $ref: "#/components/schemas/RetryPaymentInstruction"
      discriminator:
        propertyName: action
        mapping:
          select_provider: "#/components/schemas/SelectProviderInstruction"
          initiate_authorisation: "#/components/schemas/InitiateAuthorisationInstruction"
          process_mx_callback: "#/components/schemas/ProcessMXCallbackInstruction"
          change_provider: "#/components/schemas/ChangeProviderInstruction"
          redirect_to_provider: "#/components/schemas/RedirectToProviderInstruction"
          select_provider_account: "#/components/schemas/SelectProviderAccountInstruction"
          deselect_provider: "#/components/schemas/DeselectProviderInstruction"
          await: "#/components/schemas/AwaitInstruction"
          payer_action_with_provider_required: "#/components/schemas/PayerActionWithProviderRequiredInstruction"
          retry_payment: "#/components/schemas/RetryPaymentInstruction"
    LineItem:
      type: object
      properties:
        amount:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
      required:
        - amount
        - quantity
        - name
        - description
      additionalProperties: false
    Payment:
      title: Payment Intent
      type: object
      properties:
        id:
          $ref: "#/components/schemas/PaymentIntentIDType"
        state:
          type: string
          enum:
            - pending
            - failed
            - sent
            - awaiting_authorisation
            - awaiting_initiation
            - initiated
          description: The payment public state
          example: awaiting_authorisation
          externalDocs:
            url: https://whimsical.com/payment-migration-Kf4Zj48dwNFmPZAt6YM7Hp@2bsEvpTYSt1HisHTPdf1zHGkdDv7E5XiWac
            description: State elaboration
        amount:
          type: integer
          format: int32
          description: |-
            Total amount to be paid in lowest denomination of the currency. For
            example cents, and pennies.
          example: 1000
        currency:
          type: string
          description: The currency which the payment was created in. This follows the ISO 4217 standard.
          format: ISO-4217
        line_items:
          type: array
          items:
            $ref: "#/components/schemas/LineItem"
        merchant:
          type: string
          description: The payer visible name of the merchant
      required:
        - id
        - state
        - amount
        - currency
        - merchant
        - line_items
      additionalProperties: false
    Content:
      title: Content
      description: |-
        The backend determined payer-visible content. This content will be common
        but crucial subject to change for regulatory reasons and must be dynamic.
      type: object
      properties:
        terms_and_conditions_url:
          type: string
          description: The public terms and conditions link
          example: https://www.paybybank.com/terms-de
        privacy_policy_url:
          type: string
          description: The public privacy policy
          example: https://www.paybybank.com/privacy-de
        legal_entity_name:
          type: string
          description: The legal entity name for the checkout session
          example: Pay by B UAB
      required:
        - terms_and_conditions_url
        - privacy_policy_url
        - legal_entity_name
      additionalProperties: false
    Incentive:
      description: |-
        The incentive represents a benefit that will be given to a payer
        when they decide to checkout with Banked.

        The fields are localised to the checkout session and as such
        can be displayed directly to the payer without any further modification.
      type: object
      nullable: true
      properties:
        id:
          type: string
          example: 12345678-1234-1234-1234-123456789012
          description: |-
            The unique identifier of the incentive campaign that can be used to
            identify the incentive campaign.
        name:
          type: string
          example: Plant a tree
          description: |-
            The name of the incentive campaign that the Partner / Merchant / Banked
            can view to understand what the campaign represents.
        headline:
          type: string
          example: Plant a tree!
          description: The headline of the reward that is the call to action for the incentive
        subline:
          type: string
          example: When you checkout, make a difference, and plant a tree.
          description: |-
            An additional description of the incentive campaign that provides more
            detail on what will be received
        image_url:
          type: string
          description: The campaign provider logo URL. Can be used as an image src property.
          format: uri
          example: https://images.dev.banked.com/v1/read/bc35e489-66ba-4290-a5d1-60f5952026b7/40/40
      required:
        - id
        - name
        - headline
        - subline
        - image_url
      additionalProperties: false
    Redirects:
      type: object
      properties:
        success_url:
          type: string
          nullable: true
        continue_url:
          type: string
          nullable: true
        error_url:
          type: string
          nullable: true
      required:
        - success_url
        - continue_url
        - error_url
      additionalProperties: false
    Checkout:
      title: Checkout Session
      description: |-
        The full checkout session resource including all sub resources.

        Actions will move the checkout session forward in the flow. Actions will
        take the payer closer to starting the flow of funds.

        Alternate actions will move the checkout session backwards, allowing the payer
        to change details, or start over.
      type: object
      properties:
        id:
          $ref: "#/components/schemas/CheckoutSessionIDType"
        stage:
          $ref: "#/components/schemas/CheckoutStage"
        actions:
          type: array
          items:
            $ref: "#/components/schemas/ActionInstruction"
        alternate_actions:
          type: array
          items:
            $ref: "#/components/schemas/ActionInstruction"
        payment:
          $ref: "#/components/schemas/Payment"
        content:
          $ref: "#/components/schemas/Content"
        locale:
          $ref: "#/components/schemas/LocaleType"
        incentive:
          $ref: "#/components/schemas/Incentive"
        redirects:
          $ref: "#/components/schemas/Redirects"
      required:
        - id
        - stage
        - actions
        - alternate_actions
        - payment
        - content
        - locale
        - incentive
        - redirects
      additionalProperties: false
    ErrorItem:
      type: object
      additionalProperties: false
      description: |-
        An error object consisting of a defined error code and a JSON path
        to the field that failed the validation.
      properties:
        title:
          type: string
          description: |-
            The developer readable description for the error item.
            You generally should **not** show this to payers as it is not localised.
          example: Missing field country code from Payee
        code:
          type: string
          description: |-
            Enum for the kind of error returned.

            Use this code as the localisation key for the message you show the payer.
            You should also use the code of any errors as a way to add more detail.
          enum:
            - missing
            - invalid
            - not_found
            - not_authorised
        subcode:
          type: string
          description: |-
            Enum that shows more specifically what the error is.

            For example, if a value is invalid, this will show what kind of invalid
            value it is. It may be unavailable, or it may be "account closed", etc.
          nullable: true
          enum:
            - unusable
            - account_closed
            - temporarily_blocked
        source:
          type: string
          description: Path in the JSON object to the field that has the error
          example: "#/payee/country_code"
      required:
        - title
        - code
        - source
    ExtraInfo:
      type: object
      properties:
        merchant_name:
          type: string
          nullable: true
      required:
        - merchant_name
      nullable: true
      additionalProperties: false
    Error:
      title: Error
      description: |-
        Error is the response format for all errors.

        All error response bodies will inherit from this type and will contain the
        `code`, `message`, and `errors` properties.
      type: object
      properties:
        code:
          type: string
          description: |-
            Enum for the kind of error returned.

            Use this code as the localisation key for the message you show the payer.
            You should also use the code of any errors as a way to add more detail.
          enum:
            - validation_failed
            - payment_complete
            - not_found
            - not_authorised
            - unexpected_error
          example: validation_failed
        message:
          type: string
          example: One or more fields failed validation constraints
          description: |-
            Developer readable description for the error code.
            You generally should **not** show this to payers as it is not localised.
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ErrorItem"
        extra_info:
          $ref: "#/components/schemas/ExtraInfo"
      required:
        - code
        - message
        - errors
        - extra_info
      additionalProperties: false
    SelectProviderAction:
      title: Select Provider Action
      description: |-
        The client must provide the ID of the chosen provider to the checkout-srv.

        This provider will be one from a list of available providers.
      type: object
      additionalProperties: false
      required:
        - provider_id
      properties:
        provider_id:
          type: string
    SupplementalAttributeMap:
      description: |-
        Clients must provide any required supplemental attributes
        inside this object.

        They are all optional and nullable, meaning you may
        either not provide them, or provide them with a null value.
      type: object
      properties:
        IBAN:
          type: string
          nullable: true
        USERNAME:
          type: string
          nullable: true
        CORPORATE_USERNAME:
          type: string
          nullable: true
        ACCOUNT_NAME:
          type: string
          nullable: true
          description: |-
            The account name is the name of the account holder. This is not the
            account number, but the name of the person or company that owns the
            account. This is a required field for Australian bank accounts.
        BSB_NUMBER:
          type: string
          nullable: true
          description: |-
            The BSB number is a six-digit number used to identify the individual
            branch of an Australian financial institution. The BSB number is made up
            of a six-digit number with a dash between the first 3 numbers and the last
            3 numbers. In order to send it to this API, you will need to remove the
            dash and just send numbers.
          example: "012002"
        ACCOUNT_NUMBER:
          type: string
          nullable: true
          description: |-
            The account number is the number of the bank account. This is not the
            account name, but the number of the account. This is a required field for
            Australian bank accounts.
      additionalProperties: false
    InitiateAuthorisationAction:
      title: Initiate Authorisation Action
      description: The payer must consent and provide any supplemental attributes to proceed
      type: object
      additionalProperties: false
      required:
        - terms_accepted
        - supplemental_checkout_attributes
      properties:
        terms_accepted:
          type: boolean
        supplemental_checkout_attributes:
          $ref: "#/components/schemas/SupplementalAttributeMap"
    SelectProviderAccountAction:
      title: Select Provider Account Action
      description: |-
        The user must provide account id to the checkout-srv.
        The account will be used to process a payment.
        This account will be one from a list of available payer's accounts.
      type: object
      additionalProperties: false
      required:
        - account_id
      properties:
        account_id:
          type: string
          minLength: 1
    BSBNumberValidation:
      title: BSB Number Validation
      description: The client must provide the BSB Number that should be validated.
      type: object
      additionalProperties: false
      required:
        - bsb_number
      properties:
        bsb_number:
          type: string
          description: The BSB Number to validate
          example: "123456"
    BSBNumberValidationResponse:
      title: BSB Number Validation
      description: The BSB Number has been validated
      type: object
      additionalProperties: false
      required:
        - valid
        - provider_id
        - errors
      properties:
        valid:
          type: boolean
        provider_id:
          type: string
          nullable: true
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ErrorItem"
  requestBodies:
    CreateCheckoutSession:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateCheckout"
    PatchSelectProvider:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SelectProviderAction"
    PatchInitiateAuthorisation:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InitiateAuthorisationAction"
    PatchSelectProviderAccount:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SelectProviderAccountAction"
    PutValidateBSBNumber:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BSBNumberValidation"
